
---
title: "Overview"
format:
  html:
    theme: flatly
    toc: true
    toc-location: right
    toc-depth: 3
    number-sections: false
    code-fold: false
    code-tools: false
    fig-cap: true
---


```{r quarto setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE, cache=TRUE)
#| warning: false
#| echo: false
```

```{r Define the Catchment}


# Load our libraries & key datasets

library(sf)
library(tidyverse)
library(DT)

 source("Catch_Set_Up.R")
```

The Wessex Area has been subdivided into 12 ‘Operational Catchments’. Here we focus on the `r unique(CAT$OPCAT_NAME)`, the figures below provide information on its geography and waterbodies, both "unmodified" and Artificial or Heavily Modified Water Bodies (A/HMWB). 


### Geography of Catchment
The `r unique(CAT$OPCAT_NAME)` Operational Catchment sits within the `r unique(CAT$MNCAT_NAME)` Management Catchment, which sits within the larger `r unique(CAT$RBD_NAME)` River Basin District. It contains `r length(unique(CAT$WB_NAME))` individual EA waterbodies.


```{r OS Style Leaflet Map}
#| warning: false


library(magrittr)
library(ggspatial)
library(leaflet)


#Load in files
  DRN <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/DRN/DRN_Merged_MCAT.shp")
  Rivers_250k <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Hydrology/Rivers_250k.shp")

  DRN <- DRN[CAT,]
# Might need to install 
  
  leaflet() %>% 
    addProviderTiles(providers$OpenStreetMap) %>% 
    addPolygons(data= CAT,
                fillColor = "white",
                color = "black",
                opacity = 1,
                fillOpacity = 0.0000001,
                weight = 1.3,
                popup = ~WB_NAME) %>% 
    addPolylines(data=DRN,
                 color= "steelblue",
                 weight= 1.4,
                 group = "Detailed River Network") %>% 
    addLayersControl(overlayGroups = "Detailed River Network",
                      position = "topright",
                      options= layersControlOptions(collapsed=FALSE)) %>% 
                     hideGroup("Detailed River Network")
       
```

### Geological Map of Catchment

The geology of a catchment determines the presence of groundwater aquifers, a catchment's topography, and the type of surface water streams it contains.
```{r Geological Bedrock map}
#| fig-width: 12
#| fig-height: 11
#| column: screen-inset-shaded

# Convert CAT crs back to WGS84

CAT %<>% st_transform(st_crs(4326))

Geol <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Geology/WSX_625Geological.shp")


Geol_cols_LEX <- c(
  "LAMBETH GROUP" = "#e6194b",  
  "GAULT FORMATION AND UPPER GREENSAND FORMATION (UNDIFFERENTIATED)" = "#3cb44b",  
  "GREY CHALK SUBGROUP" = "#ffe119",  
  "LIAS GROUP" = "#4363d8", 
  "INFERIOR OOLITE GROUP" = "#f58231",  
  "PENNINE LOWER COAL MEASURES FORMATION AND SOUTH WALES LOWER COAL MEASURES FORMATION (UNDIFFERENTIATED)" = "#911eb4", 
  "DINANTIAN ROCKS (UNDIFFERENTIATED)" = "#42d4f4",  
  "LOWER GREENSAND GROUP" = "#f032e6",
  "GREAT OOLITE GROUP" = "#bfef45",  
  "CORALLIAN GROUP" = "#fabebe",  # pink
  "TRIASSIC ROCKS (UNDIFFERENTIATED)" = "#469990",  # teal
  "WHITE CHALK SUBGROUP" = "#e6beff",  # lavender
  "WARWICKSHIRE GROUP" = "#9A6324",  # brown
  "LOWER DEVONIAN ROCKS (UNDIFFERENTIATED)" = "#fffac8",  # light yellow
  "KELLAWAYS FORMATION AND OXFORD CLAY FORMATION (UNDIFFERENTIATED)" = "#800000",  # maroon
  "BRACKLESHAM GROUP AND BARTON GROUP (UNDIFFERENTIATED)" = "#aaffc3",  # mint
  "UNNAMED EXTRUSIVE ROCKS, SILURIAN" = "#808000",  # olive
  "SOLENT GROUP" = "#ffd8b1",  # peach
  "PURBECK LIMESTONE GROUP" = "#000075",  # navy
  "LLANDOVERY ROCKS (UNDIFFERENTIATED)" = "#a9a9a9",  # dark gray
  "WENLOCK ROCKS (UNDIFFERENTIATED)" = "#d3d3d3",  # light gray
  "PERMIAN ROCKS (UNDIFFERENTIATED)" = "#ff69b4",  # hot pink
  "PORTLAND GROUP" = "#b5651d",  # sienna
  "MILLSTONE GRIT GROUP [SEE ALSO MIGR]" = "#b0e0e6",  # powder blue
  "UPPER DEVONIAN ROCKS (UNDIFFERENTIATED)" = "#f4a460",  # sandy brown
  "MIDDLE DEVONIAN (UNDIFFERENTIATED)" = "#2e8b57",  # sea green
  "THAMES GROUP" = "#8a2be2",  # blue violet
  "SILURIAN ROCKS (UNDIFFERENTIATED)" = "#ff7f50",  # coral
  "HOLSWORTHY GROUP" = "#d2691e",  # chocolate
  "TREMADOC ROCKS (UNDIFFERENTIATED)" = "#ff6347",  # tomato
  "PRIDOLI ROCKS (UNDIFFERENTIATED)" = "#4682b4",  # steel blue
  "WEST WALTON FORMATION, AMPTHILL CLAY FORMATION AND KIMMERIDGE CLAY FORMATION (UNDIFFERENTIATED)" = "#d2b48c",  # tan
  "SOUTH WALES UPPER COAL MEASURES FORMATION" = "#556b2f",  # dark olive green
  "WEALDEN GROUP" = "#8b4513",  # saddle brown
  "LUDLOW ROCKS (UNDIFFERENTIATED)" = "#b8860b",  # dark golden rod
  "PENNINE MIDDLE COAL MEASURES FORMATION AND SOUTH WALES MIDDLE COAL MEASURES FORMATION (UNDIFFERENTIATED)" = "#20b2aa",  # light sea green
  "TEIGN VALLEY GROUP" = "#9932cc"  # dark orchid
)

# Match colours to a custom column

Geol_Cols_RCS_D <- c("CLAY, SILT, SAND AND GRAVEL" = "#b8860b",                           
                     "MUDSTONE, SANDSTONE AND LIMESTONE" = "#f4a460",
                     "CHALK"  = "#aaffc3",
                     "MUDSTONE, SILTSTONE, LIMESTONE AND SANDSTONE" = "#ffd8b1",
                     "LIMESTONE, SANDSTONE, SILTSTONE AND MUDSTONE"  = "#90e6f8",
                     "MUDSTONE, SILTSTONE, SANDSTONE, COAL, IRONSTONE AND FERRICRETE" = "#d2693e",
                     "LIMESTONE WITH SUBORDINATE SANDSTONE AND ARGILLACEOUS ROCKS" = "#d3d3d3",  
                     "SANDSTONE AND MUDSTONE"  = "#ff7f70",
                     "SANDSTONE, LIMESTONE AND ARGILLACEOUS ROCKS" = "#ff7f50",
                   "MUDSTONE, SILTSTONE AND SANDSTONE" = "#ffbf89",
                   "SANDSTONE AND CONGLOMERATE, INTERBEDDED" = "#f86413",
                    "SAND, SILT AND CLAY"   = "#fbd894",                                       
                    "MAFIC LAVA AND MAFIC TUFF"   = "seagreen",                                 
                    "CLAY, SILT AND SAND" = "#b8865e",                                          
                    "LIMESTONE AND MUDSTONE, INTERBEDDED" = "skyblue",                       
                    "LIMESTONE AND CALCAREOUS SANDSTONE"  =   "#c29ea1",                       
                    "LIMESTONE, MUDSTONE AND CALCAREOUS MUDSTONE"  = "#add8e6",               
                    "SANDSTONE AND SILTSTONE, INTERBEDDED" ="#ff9842" )


Geol <- Geol %>%
  mutate(color_rcs = Geol_Cols_RCS_D[RCS_D],
         color_lex = Geol_cols_LEX[LEX])

# Crop the Geology data by catchment
Geol_CAT <- Geol %>% st_intersection(CAT)

#Plot 
 ggplot()+
  geom_sf(data=Geol_CAT, aes(fill=RCS_D))+
  scale_fill_manual( values = setNames(Geol_CAT$color_rcs, Geol_CAT$RCS_D))+
  annotation_scale(location = "bl", width_hint = 0.5)+
  annotation_north_arrow(location = "bl", which_north = "true", 
                         pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
                         style = north_arrow_fancy_orienteering)+
  theme_void()+
  labs(title = paste0("Bedrock Geology of ", CAT$OPCAT_NAME),
       fill = "Lithology")+
    theme(legend.text = element_text(size = 6),
        legend.position = "right")

```

### Topography

```{r Topo map}
#| fig-width: 9
#| fig-height: 8


library(elevatr)

# CAT %<>% st_transform(st_crs(4326))
 
elev_rast <- elevatr::get_elev_raster(CAT, z=9, clip="locations")

elev_rast_df <- as.data.frame(raster::rasterToPoints(elev_rast))
colnames(elev_rast_df) <- c("x", "y", "Elev")
  
# Here we assign wbs to upper, mid and lower catchment based on topography
#elev_rast_df_3 <- elev_rast_df %>%
#  mutate(TopoRange = cut(Elev,
  #                       breaks = quantile(Elev, probs = c(0, 1/3, 2/3, 1), na.rm = TRUE),
   #                      labels = c("Low", "Medium", "High"),
    #                     include.lowest = TRUE))

#  o <- st_join(CAT, elev_rast_df_3)



# CAT & DRN need the same CRS
CAT <- st_transform(CAT, crs = st_crs(DRN))

# Filter DRN by CAT
DRN <- DRN[CAT,]

ggplot(data = NULL) +
  geom_raster(data = elev_rast_df, aes(x = x, y = y, fill = Elev)) +
 # geom_sf(data = CAT_Union, col = 1, fill = NA) +
  geom_sf(data= DRN, col="#3944bc", fill=NA) +
  scale_fill_gradientn(colours = terrain.colors(200)) +  # 200 to try get the right gradie
  labs(fill = "Elevation (m)") +
  theme_void()+
   annotation_scale(location = "bl", width_hint = 0.5)+
  annotation_north_arrow(location = "bl", which_north = "true", 
                         pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
                         style = north_arrow_fancy_orienteering)+
  labs(title = paste0(CAT$OPCAT_NAME, " Topographic Map"))


```

### Overall WFD Status
Although the rest of this document provides access to WFD data from 2022, 2022 was an interim WFD year and omitted Chemical classifications. The most recent full WFD assessment displayed below, occurred 5 years ago in 2019.
```{r}

CDE <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/WFD_Wessex_2024.csv")

CDE %<>% 
  filter(Operational.Catchment == unique(CAT$OPCAT_NAME)) %>% 
  inner_join(CAT_geo, ., by = c("WB_ID" = "Water.Body.ID"))



pal <- colorFactor(
  palette = c("green", "seagreen", "seagreen", "yellow", "orange", "#b71105", "red"),
  levels = c("High", "Good", "Supports Good", "Moderate", "Bad", "Poor", "Fail"),
  na.color = "transparent"
)



  ov <- CDE %>% filter(Year == "2019" &
                         Classification.Item ==  "Overall Water Body")


 leaflet() %>% 
  addProviderTiles(providers$Esri,
                  group = "Esri Basemap") %>% 
  addPolygons(data= ov,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal(Status),
              popup= ~Water.Body) %>% 
   addLegend(opacity = 0.9, 
            pal = pal,
            values = ov$Status,
            title = paste0(unique(ov$Classification.Item),
                           "<br> 2019 Status")) %>%        
  addLayersControl(overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("Esri Basemap")) 




```