---
title: "Water Resources"
format:
  html:
    theme: flatly
    toc: true
    toc-location: right
    toc-depth: 3
    code-fold: false
    code-tools: false
    fig-cap: true
    callout-icon: false
---

::: {.callout-warning}
## This page is under construction
:::

```{r quarto setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE, cache=TRUE)
#| warning: false
#| echo: false
```

```{css}
.dataTables_wrapper {
  max-height: 350px;
  overflow-y: auto;
}

.dataTables_wrapper table {
font-size: 11px;
}
```

```{r }
#| label: the general cps & cat

library(sf)
library(magrittr)
library(tidyverse)
library(leaflet)
library(lubridate)

source("Catch_Set_Up.R")

```


```{r}


# Load your data
CDE <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/WFD_Wessex_2024.csv")

CDE %<>% 
  filter(Operational.Catchment == unique(CAT$OPCAT_NAME)) %>% 
  inner_join(CAT_geo, ., by = c("WB_ID" = "Water.Body.ID"))

# Define palette
pal <- colorFactor(
  palette = c("#ADE8F4", "seagreen", "seagreen", "yellow", "orange", "#b71105", "red"),
  levels = c("High", "Good", "Supports Good", "Moderate", "Bad", "Poor", "Fail"),
  na.color = "transparent"
)


# 2022 map
CDE_e_2022 <- CDE %>% 
  filter(Classification.Item == "Hydrological Regime" & 
           Year == "2022")


```

### Hydrological Regime WFD

Within the `r unique(CAT$OPCAT_NAME)`'s `r length(unique(CAT$WB_NAME))` individual EA waterbodies.

In the most recent WFD classification in `r sort(unique(CDE$Year), decreasing=TRUE)[1]`,  `r round(sum(CDE_e_2022$Status == "Supports Good")/length(unique(CAT$WB_NAME))*100, digits=0)`% of waterbodies scored " Supports Good" for `r unique(CDE_e_2022$Classification.Item)`. Whilst `r round(sum(CDE_e_2022$Status == "High")/length(unique(CAT$WB_NAME))*100, digits=0)`% of waterbodies scored "High".


```{r WFD Map hydrolregime}


CDE_m <- CDE %>% 
  filter(Classification.Item == "Hydrological Regime")

CDE_m_22 <- CDE_m %>% 
         filter(Year == sort(unique(CDE$Year), decreasing=TRUE)[1])

CDE_m_19 <- CDE_m %>% 
         filter(Year == sort(unique(CDE$Year), decreasing=TRUE)[2])

CDE_m_15 <- CDE_m %>% 
         filter(Year == sort(unique(CDE$Year), decreasing=TRUE)[3])

CDE_m_last3 <- CDE_m %>% 
          filter(Year == sort(unique(CDE$Year), decreasing=TRUE)[1] &
                          sort(unique(CDE$Year), decreasing=TRUE)[2] &
                          sort(unique(CDE$Year), decreasing=TRUE)[3]
                 )

 leaflet() %>% 
  addProviderTiles(providers$Esri,
                   group = "Esri Basemap") %>% 
   addPolygons(data= CDE_m_22,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group= "2022 Status") %>% 
  addPolygons(data= CDE_m_19,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group= "2019 Status") %>% 
  addPolygons(data= CDE_m_15,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2015 Status") %>% 
  addLegend(opacity = 0.9, 
            pal = pal,
            values = CDE_m$Status,
            title = unique(CDE_m_last3$Classification.Item)) %>% 
  addLayersControl(baseGroups = c( "2022 Status",
              "2019 Status",
              "2015 Status"),
                   overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019 Status",
              "2015 Status",
              "Esri Basemap"))


```

### Reasons for Not Achieving Good

The table below highlights RNAGs failing their Hydrological Regime classification. It also includes RNAGs failing for a non-hydrological element, but where hydrology is identified as the primary pressure causing the failure.

:::{.callout-tip icon=true}
Use the below 'Search' box to to search for a waterbody or classification element and scroll through RNAGs and Measures. Click the 'Excel' button to download a spreadsheet.
:::
```{r RNAGS datatable WQ}

RNAG <- RFF %>%  filter(
                       CLASS_ITEM_NAME == "Hydrological Regime" |
                       PRESSURE_1 == "Hydrology" | 
                       PRESSURE_2 == "Hydrology" ) %>% 
                       arrange(WATERBODY_ID)  %>% 
                       rename(YEAR_RNAG_CREATED= CREATED_DATE,
                       WFD_YEAR = YEAR) %>% 
                       distinct()

# Arrange dataframe so it appears neater in DT

library(DT)
library(htmlwidgets)

DT::datatable(RNAG[,c(7, 6,18, 32, 16:17,19,20,22:30,23, 10,11,2)],
          class = 'cell-border stripe',
          extensions = c("Buttons","FixedColumns"),
          options = list(
            dom = 'Blfrtip',
            buttons = 'excel',
            initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}"))
    )
             

```


### Measures to Improve Waterbodies

Waterbodies with an above associated RNAG are shown in the table below. 


```{r Measures WQ}
Mes %<>%  filter(WATERBODY_ID %in% unique(RNAG$WATERBODY_ID))

CAT_Mini <- CAT %>% select(WB_NAME, WB_ID) %>% 
  st_drop_geometry()

Mes_Categ <- inner_join(Mes, Measures_Cat, by = "ACTION_UID") %>% 
             inner_join(CAT_Mini, by = c("WATERBODY_ID" = "WB_ID")) %>% 
              filter(!CREATED_DATE== "01/01/1980" & DEPRECATED_CATEGORY == "No") %>% 
              distinct() %>% 
              arrange(WATERBODY_ID)


# Datatable
   DT::datatable(Mes_Categ[,c(16,3,10,12:14)],
          class = 'cell-border stripe',
          extensions = c("Buttons","FixedColumns"),
          options = list(
            dom = 'Blfrtip',
            buttons = 'excel',
            initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}"))
    )
```

### Abstraction License Summary

The hydrological cycle varies and at certain flow levels can become an ecological stressor. Abstraction license summaries provide information on hydrology as a pressure at different river flow levels. The below map visualised abstraction? at Q50, or average flow, where it is 50% of the time. Whereas Q95 shows water availability during dry periods where low-flows are common.

```{r ALS Maps}

MetBrewer::met.brewer(name = "Isfahan2", plot = )

library(leaflet)
library(magrittr)
library(tidyverse)

ALS <- readxl::read_excel("C:/Users/hg000051/Downloads/Copy of Parrett WRGIS info.xlsx", skip =3) %>% 
                  rename_with(make.names)

ALS$FL.Flow.Compliance.Q95 <- gsub("BAND 1", "BAND1", ALS$FL.Flow.Compliance.Q95)

shp <- sf::read_sf("C:/Users/hg000051/OneDrive - Defra/Projects/04_Misc_Data/WFD Data/Wessex_SHP_Data/Interim_WFD_2022.shp") %>% 
           select(10:13) 


ALS %<>% 
  inner_join(shp, ., by = c("WB_ID" ="EA_WB_ID")) %>% 
           sf::st_transform(4326)



# Define palette
pal_ALS <- colorFactor(
  palette = c("#79ad41", "#ddc000", "#cf3a36"),
  levels = c("COMPLIANT", "BAND1", "BAND3"),
  na.color = "transparent"
)

ALS_Q95 <- ALS[,c(1:4,26)]
ALS_Q70 <- ALS[,c(1:4,24)]
ALS_Q50 <- ALS[,c(1:4,22)]
ALS_Q30 <- ALS[,c(1:4,20)]

 leaflet() %>% 
  addProviderTiles(providers$Esri) %>% 
   
   addPolygons(data= ALS_Q95,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal_ALS(FL.Flow.Compliance.Q95),
              popup= ~WB_NAME,
              group= "Q95 Flow Compliance") %>% 
   
  addPolygons(data= ALS_Q70,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal_ALS(FL.Flow.Compliance.Q70),
              popup= ~WB_NAME,
              group= "Q70 Flow Compliance") %>% 
   
  addPolygons(data= ALS_Q50,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal_ALS(FL.Flow.Compliance.Q50),
              popup= ~WB_NAME,
              group = "Q50 Flow Compliance") %>% 
   
  addPolygons(data= ALS_Q30,
              color = "black",
              weight = 0.5,
              fillOpacity = 0.9,
              fillColor = ~pal_ALS(FL.Flow.Compliance.Q30),
              popup= ~WB_NAME,
              group = "Q30 Flow Compliance") %>% 
   
  addLegend(opacity = 0.9, 
            pal = pal_ALS,
            values = ALS_Q95$FL.Flow.Compliance.Q95,
            title = "Water Availability") %>%
   
  addLayersControl(baseGroups = c( "Q95 Flow Compliance",
                                   "Q70 Flow Compliance",
                                   "Q50 Flow Compliance",
                                   "Q30 Flow Compliance"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("Q95 Flow Compliance",
              "Q70 Flow Compliance",
              "Q30 Flow Compliance"))

```


For specific comments see 
```{r Chris G WR Summary for the Parrett}

library(readxl)
WR <- read_excel("/dbfs/FileStore/WSX_HGray/ETL_Imports_Require_Manual/WR_for_Parrett_evidence_pack.xlsx")

WR$`Daily vol` <- round(as.numeric(WR$`Daily vol`), 4)

# Rearranged order so that comments could be in first col and changed the colour as a lot of tables on this page
DT::datatable(WR[,c(2,3,15,1,4:14)],
          class = 'cell-border stripe',
          extensions = c("Buttons","FixedColumns"),
          options = list(
            dom = 'Blfrtip',
            buttons = 'excel',
            initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#0177BA', 'color': '#fff'});",
    "}"))
    )

```



