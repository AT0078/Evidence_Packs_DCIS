group = "Esri Basemap") %>%
addPolygons(data=CAT,
label = CAT$WB_NAME,
fill=NA,
color = "black",
weight = 2) %>%
addPolygons(data=CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 0.22,
fillColor = ~pal(CDE_e$Status),
popup= CDE_e$Water.Body,
group= "WFD Invertebrate Status")  %>%
# Here's where I added the RHS dat
addPolylines(data = Rivs250,
color = "steelblue",
opacity = 1,
weight = 1.4) %>%
addCircleMarkers(data = inv_2019,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
group = "2019-2024 <br> Biosys Invertebrate Sites"
)%>%
addCircleMarkers(data = api,
lng = ~long,
lat = ~lat,
radius = 5,
fillColor = ~pal_cs_inv(api$Mean_Tot),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("Mean Total Score: ", api$Mean_Tot,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", range(api$DateTime)),
group = "2019-2024 <br> Riverfly Partnership Sites") %>%
addCircleMarkers(data = inv_2010,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
group = "2010-2018 <br> Biosys Invertebrate Sites") %>%
addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
overlayGroups = c(
"2019-2024 <br> Riverfly Partnership Sites",
"2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status",
"Esri Basemap")) %>%
addLegend(title= paste0("Mean Total CS Site <br> Scores 2019- Current"),
pal = pal_inv_2010, values = api$Mean_Tot)
## Leaflet Map
leaflet() %>%
addProviderTiles(providers$Esri,
group = "Esri Basemap") %>%
addPolygons(data=CAT,
label = CAT$WB_NAME,
fill=NA,
color = "black",
weight = 2) %>%
addPolygons(data=CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 0.22,
fillColor = ~pal(CDE_e$Status),
popup= CDE_e$Water.Body,
group= "WFD Invertebrate Status")  %>%
# Here's where I added the RHS dat
addPolylines(data = Rivs250,
color = "steelblue",
opacity = 1,
weight = 1.4) %>%
addCircleMarkers(data = inv_2019,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
group = "2019-2024 <br> Biosys Invertebrate Sites"
)%>%
addCircleMarkers(data = api,
lng = ~long,
lat = ~lat,
radius = 5,
fillColor = ~pal_cs_inv(api$Mean_Tot),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("Mean Total Score: ", api$Mean_Tot,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", range(api$DateTime)),
group = "2019-2024 <br> Riverfly Partnership Sites") %>%
addCircleMarkers(data = inv_2010,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
group = "2010-2018 <br> Biosys Invertebrate Sites") %>%
addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
overlayGroups = c(
"2019-2024 <br> Riverfly Partnership Sites",
"2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status",
"Esri Basemap")) %>%
addLegend(title= paste0("Mean Total CS Site <br> Scores 2019- Current"),
pal = pal_inv_2010, values = api$Mean_Tot)
pal_inv <- colorBin(palette = "RdYlBu", domain=inv_2019$WHPT_TOTAL_Mean)
inv_2019 <- inv %>%
mutate(
Sample_Date_Maybe = dmy(ANALYSIS_ID)
) %>%
filter(Year >= "2019") %>%
group_by(SITE_ID) %>%
mutate(
Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
)
#| layout-ncol: 2
#| column: page
# Nice to have: It would be better to add a radius change as well as a fill colour to the below leaflet maps. Looks better.
inv <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Inv_WSX.csv")
inv %<>%
filter(OPCAT_NAME == unique(CAT$OPCAT_NAME)) %>%
mutate(
Date = lubridate::ymd(Date),
Sampled_Date_Amended = lubridate::ymd(REPLICATE_CODE)
)
ggplot(inv, aes(Date, WHPT_TOTAL))+geom_point()+geom_smooth()+
labs(title = paste0("WHPT_TOTAL across ", unique(CAT$OPCAT_NAME), " Catchment"))
ggplot(inv, aes(Date, WHPT_ASPT))+geom_point()+geom_smooth()+
labs(title = paste0("WHPT_ASPT across ", unique(CAT$OPCAT_NAME), " Catchment"))
Rivers_250k <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Hydrology/Rivers_250k.shp")
Rivs250 <- Rivers_250k %>%
st_transform(st_crs(4326)) %>%
st_intersection(CAT_Union)
# Don't use BMPW_Mean it's over the whole timespan not custom
inv_2019 <- inv %>%
mutate(
Sample_Date_Maybe = dmy(ANALYSIS_ID)
) %>%
filter(Year >= "2019") %>%
group_by(SITE_ID) %>%
mutate(
Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
)
#ggplot()+ geom_sf(data=CAT_Union, fill=NA)+
#     geom_sf(data=Rivs250, col="skyblue")+
#    geom_point(data=inv_2019, aes( x= lon, y= lat, col=BMWP_Mean, size=BMWP_Mean))+
#   ggtitle(paste0("EA Invert Sampling Sites ", min(inv_2019$Year)," mean BMWP tot Scores to ", #max(inv_2019$Year)),
##             subtitle = paste0(unique(CAT$OPCAT_NAME)))+
#           theme_void()+
#  theme(plot.title = element_text(hjust = 0.5),
#       plot.subtitle = element_text(hjust = 0.0))
pal_inv <- colorBin(palette = "RdYlBu", domain=inv_2019$WHPT_TOTAL_Mean)
inv_2010 <- inv %>%
filter(Year >= 2010 & Year <= 2018) %>%
group_by(SITE_ID) %>%
mutate(
Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
)
pal_inv_2010 <- colorBin(palette = "RdYlBu", domain=inv_2010$WHPT_TOTAL_Mean)
# Leaflet plot of riverfly
#
leaflet() %>%
addProviderTiles(providers$Esri,
group = "Esri Basemap") %>%
addPolygons(data=CAT,
label = CAT$WB_NAME,
fill=NA,
color = "black",
weight = 2) %>%
addPolygons(data=CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 0.22,
fillColor = ~pal(CDE_e$Status),
popup= CDE_e$Water.Body,
group= "2022 WFD Invertebrate Status")  %>%
# Here's where I added the RHS dat
addPolylines(data = Rivs250,
color = "steelblue",
opacity = 1,
weight = 1.4) %>%
addCircleMarkers(data = inv_2019,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
group = "2019-2024 <br> Biosys Invertebrate Sites"
)%>%
addCircleMarkers(data = inv_2010,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
group = "2010-2018 <br> Biosys Invertebrate Sites") %>%
addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
overlayGroups = c(
"2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"2022 WFD Invertebrate Status"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"Esri Basemap")) %>%
addLegend(title= paste0("Mean WHPT Site <br> Scores 2019- Current"),
pal = pal_inv, values = inv_2019$WHPT_TOTAL_Mean)
#| label: Inverts WFD 2022
CDE_e <- CDE %>%
filter(Classification.Item == "Invertebrates" &
Year == "2022")
CDE_e_19<- CDE %>%
filter(Classification.Item == "Invertebrates" &
Year == "2019")
leaflet() %>%
addProviderTiles(providers$Esri,
group = "Esri Basemap") %>%
addPolygons(data= CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 1,
fillColor = ~pal(Status),
popup= ~Water.Body,
group = "2022 Status") %>%
addPolygons(data= CDE_e_19,
color = "black",
weight = 0.5,
fillOpacity = 1,
fillColor = ~pal(Status),
popup= ~Water.Body,
group = "2019 Status") %>%
addLegend(opacity = 0.9,
pal = pal,
values = CDE_e$Status,
title = "Invertebrates WFD Status") %>%
addLayersControl(baseGroups = c( "2022 Status",
"2019 Status"),
overlayGroups = c(
"Esri Basemap"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019 Status",
"Esri Basemap"))
#| layout-ncol: 2
#| column: page
# Nice to have: It would be better to add a radius change as well as a fill colour to the below leaflet maps. Looks better.
inv <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Inv_WSX.csv")
inv %<>%
filter(OPCAT_NAME == unique(CAT$OPCAT_NAME)) %>%
mutate(
Date = lubridate::ymd(Date),
Sampled_Date_Amended = lubridate::ymd(REPLICATE_CODE)
)
ggplot(inv, aes(Date, WHPT_TOTAL))+geom_point()+geom_smooth()+
labs(title = paste0("WHPT_TOTAL across ", unique(CAT$OPCAT_NAME), " Catchment"))
ggplot(inv, aes(Date, WHPT_ASPT))+geom_point()+geom_smooth()+
labs(title = paste0("WHPT_ASPT across ", unique(CAT$OPCAT_NAME), " Catchment"))
Rivers_250k <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Hydrology/Rivers_250k.shp")
Rivs250 <- Rivers_250k %>%
st_transform(st_crs(4326)) %>%
st_intersection(CAT_Union)
# Don't use BMPW_Mean it's over the whole timespan not custom
inv_2019 <- inv %>%
mutate(
Sample_Date_Maybe = dmy(ANALYSIS_ID)
) %>%
filter(Year >= "2019") %>%
group_by(SITE_ID) %>%
mutate(
Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
)
#ggplot()+ geom_sf(data=CAT_Union, fill=NA)+
#     geom_sf(data=Rivs250, col="skyblue")+
#    geom_point(data=inv_2019, aes( x= lon, y= lat, col=BMWP_Mean, size=BMWP_Mean))+
#   ggtitle(paste0("EA Invert Sampling Sites ", min(inv_2019$Year)," mean BMWP tot Scores to ", #max(inv_2019$Year)),
##             subtitle = paste0(unique(CAT$OPCAT_NAME)))+
#           theme_void()+
#  theme(plot.title = element_text(hjust = 0.5),
#       plot.subtitle = element_text(hjust = 0.0))
pal_inv <- colorBin(palette = "RdYlBu", domain=inv_2019$WHPT_TOTAL_Mean)
inv_2010 <- inv %>%
filter(Year >= 2010 & Year <= 2018) %>%
group_by(SITE_ID) %>%
mutate(
Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
)
pal_inv_2010 <- colorBin(palette = "RdYlBu", domain=inv_2010$WHPT_TOTAL_Mean)
# Leaflet plot of riverfly
#
leaflet() %>%
addProviderTiles(providers$Esri,
group = "Esri Basemap") %>%
addPolygons(data=CAT,
label = CAT$WB_NAME,
fill=NA,
color = "black",
weight = 2) %>%
addPolygons(data=CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 0.22,
fillColor = ~pal(CDE_e$Status),
popup= CDE_e$Water.Body,
group= "2022 WFD Invertebrate Status")  %>%
# Here's where I added the RHS dat
addPolylines(data = Rivs250,
color = "steelblue",
opacity = 1,
weight = 1.4) %>%
addCircleMarkers(data = inv_2019,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
group = "2019-2024 <br> Biosys Invertebrate Sites"
)%>%
addCircleMarkers(data = inv_2010,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
group = "2010-2018 <br> Biosys Invertebrate Sites") %>%
addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
overlayGroups = c(
"2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"2022 WFD Invertebrate Status"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"Esri Basemap")) %>%
addLegend(title= paste0("Mean WHPT Site <br> Scores 2019- Current"),
pal = pal_inv, values = inv_2019$WHPT_TOTAL_Mean)
#| label: Riverfly data from RP
#| fig-column: page-right
library(lubridate)
library(jsonlite)
library(httr)
# Collect your token from the universal unique identifier
uuid_res <- GET("https://api.cartographer.io/map/embed/v1/authorize")
token <- content(uuid_res)$token
# Our url endpoint
url <- "https://api.cartographer.io/map/feature/v2/riverfly"
#The way the api gives us the dates is as a timestamp from our first date, here the origin, we use it later.
orig="2019-01-01T12:00:00.000Z"
bbox <- CAT_Union %>%
st_bbox()
Today_DateTime <- gsub(" ","T", Sys.time())
Today_DateTime <- paste0(Today_DateTime, ".000Z")
Today_DateTime = "2024-08-26T01:00:00.000Z"  # Temp measure to fix bug, remove later.
# Set the parameters
params <- list(
workspace = "riverflies",
project = "riverfly",
sw= paste0(as.numeric(bbox[2]),",", as.numeric(bbox[1])),
ne= paste0(as.numeric(bbox[4]),",",as.numeric(bbox[3])),
from = orig,
to = Today_DateTime
)
# Make a GET request to the feature endpoint
response <- GET(url, add_headers("Authorization" = paste("Bearer", token)), query = params)
# Crunch api from JSON
api_char <-  rawToChar(response$content)
apio <- fromJSON(api_char, flatten=T)
#The timestamp our data is given to us in is in milliseconds from the 'from' time we requested so we need to convert.
apio$features$properties.timestamp <- as.POSIXct(apio$features$properties.timestamp/1000, origin = orig) #we've already specified the timezone in the origin so don't need to add , tz= "
api <- apio$features
colnames(api) <-  gsub("properties.","",names(api))
#Lets extract the geometry to points so addCircleMarkers can read it.
api %<>%
mutate(
long=unlist(map(api$geometry.coordinates,1)),
lat=unlist(map(api$geometry.coordinates,2)),
DateTime=gsub("2073","2024", timestamp),
DateTime=gsub("2072","2023", DateTime),
DateTime=gsub("2071","2022", DateTime),
DateTime=gsub("2070","2021",DateTime),
DateTime=gsub("2069","2020",DateTime),
DateTime=gsub("2068","2019",DateTime),
DateTime=ymd_hms(DateTime)
) %>%
group_by(site) %>%
mutate(
Survey_Count=length(site),
Mean_Tot = mean(total)
)
# Note the api is already filtered to everything after 2019
pal_cs_inv <- colorBin(palette = "RdYlBu", domain=api$Mean_Tot)
## Leaflet Map
leaflet() %>%
addProviderTiles(providers$Esri,
group = "Esri Basemap") %>%
addPolygons(data=CAT,
label = CAT$WB_NAME,
fill=NA,
color = "black",
weight = 2) %>%
addPolygons(data=CDE_e,
color = "black",
weight = 0.5,
fillOpacity = 0.22,
fillColor = ~pal(CDE_e$Status),
popup= CDE_e$Water.Body,
group= "WFD Invertebrate Status")  %>%
# Here's where I added the RHS dat
addPolylines(data = Rivs250,
color = "steelblue",
opacity = 1,
weight = 1.4) %>%
addCircleMarkers(data = inv_2019,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
group = "2019-2024 <br> Biosys Invertebrate Sites"
)%>%
addCircleMarkers(data = api,
lng = ~long,
lat = ~lat,
radius = 5,
fillColor = ~pal_cs_inv(api$Mean_Tot),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("Mean Total Score: ", api$Mean_Tot,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", range(api$DateTime)),
group = "2019-2024 <br> Riverfly Partnership Sites") %>%
addCircleMarkers(data = inv_2010,
lng = ~lon,
lat = ~lat,
radius = 5,
fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
color = "black",
weight = 0.3,
fillOpacity = 1,
popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
"<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
group = "2010-2018 <br> Biosys Invertebrate Sites") %>%
addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
overlayGroups = c(
"2019-2024 <br> Riverfly Partnership Sites",
"2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status"),
position = "topright",
options= layersControlOptions(collapsed=FALSE)) %>%
hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
"2010-2018 <br> Biosys Invertebrate Sites",
"WFD Invertebrate Status",
"Esri Basemap")) %>%
addLegend(title= paste0("Mean Total CS Site <br> Scores 2019- Current"),
pal = pal_inv_2010, values = api$Mean_Tot)
