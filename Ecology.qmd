---
title: "Ecology"
format:
  html:
    theme: flatly
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: false
    callout-icon: false
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, echo=FALSE, cache=TRUE)
```

::: callout-warning
## This page is under construction
:::

```{css}
.dataTables_wrapper {
  max-height: 350px;
  overflow-y: auto;
}

.dataTables_wrapper table {
font-size: 11px;
}
```

Ecology is the centerpiece of our action on rivers, the Water Framework Directive is centered on achieving "Good Ecological Status" with all measures targeting improvements in ecology.

For catchment management and river restoration to be effective, measures must benefit ecology. Without a clear line-of-sight between how a measure will have a positive ecological impact, the success of the impact and the investment into this is of limited value.

### WFD Ecological Overall Status

Ecological status classifications can be composed of up to four different assessments:

-   An assessment of status indicated by a biological quality element such as fish, invertebrates or algae. We also assess for the presence of invasive species as a separate test.

-   An assessment of compliance with environmental standards for supporting physico-chemical conditions, such as dissolved oxygen, phosphorus or ammonia.

-   An assessment of compliance with environmental standards for concentrations of specific pollutants, such as zinc, cypermethrin or arsenic (these are known as 'Annex VIII' substances).

The lowest score in a waterbody for the above items is adopted as the "Ecological Overall" classification for that waterbody.

------------------------------------------------------------------------

```{r }
#| label: the general cps & cat

library(sf)
library(magrittr)
library(tidyverse)
library(leaflet)
library(lubridate)


source("Catch_Set_Up.R")

  DRN <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/DRN/DRN_Merged_MCAT.shp")

  DRN <- DRN[CAT,]

```

```{r CDE text}


# Load your data
CDE <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/WFD_Wessex_2024.csv")

CDE %<>% 
  filter(Operational.Catchment == unique(CAT$OPCAT_NAME)) %>% 
  inner_join(CAT_geo, ., by = c("WB_ID" = "Water.Body.ID"))

# 2022 map
CDE_e_2022 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2022")

# 2019 map
CDE_e_2019 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2019" & Cycle == "3")


```

In the 2022 interim WFD classification for the `r unique(CAT$OPCAT_NAME)` saw `r round(((table(CDE_e_2022$Status)[[1]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieved *`r row.names(table(CDE_e_2022$Status))[1]`*, whilst `r round(((table(CDE_e_2022$Status)[[2]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieved *`r row.names(table(CDE_e_2022$Status))[2]`*, and `r round(((table(CDE_e_2022$Status)[[3]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieved *`r row.names(table(CDE_e_2022$Status))[3]`*.

In comparison, the 2019 WFD classification saw `r  round(((table(CDE_e_2019$Status)[[1]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r row.names(table(CDE_e_2019$Status))[1]`*, with `r round(((table(CDE_e_2019$Status)[[2]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r   row.names(table(CDE_e_2019$Status))[2]`*, and `r round(((table(CDE_e_2019$Status)[[3]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r row.names(table(CDE_e_2019$Status))[3]`*.

```{r}
#| label: Ecological Overall CDE Map



library(leaflet)
library(dplyr)
library(magrittr)


# Define palette
pal <- colorFactor(
  palette = c("green", "seagreen", "seagreen", "yellow", "orange", "#b71105", "red"),
  levels = c("High", "Good", "Supports Good", "Moderate", "Bad", "Poor", "Fail"),
  na.color = "transparent"
)

CDE_e_2015 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2015")#& Cycle == "3")


 leaflet() %>% 
  addProviderTiles(providers$Esri,
                  group = "Esri Basemap") %>% 
  addPolygons(data= CDE_e_2022,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2022 Status") %>% 
  addPolygons(data= CDE_e_2019,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2019 Status") %>% 
  addPolygons(data= CDE_e_2015,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2015 Status") %>% 
   addLegend(opacity = 0.9, 
            pal = pal,
            values = CDE_e_2022$Status,
            title = paste0(unique(CDE_e_2022$Classification.Item),
                           "<br> WFD Status")) %>%        
  addLayersControl(baseGroups = c( "2022 Status",
              "2019 Status",
              "2015 Status"),
                   overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019 Status",
              "2015 Status",
              "Esri Basemap")) 






```

### Reasons for Not Achieving Good

:::{.callout-tip icon=true}
Use the below 'Search' box to to search for a waterbody or classification element and scroll through RNAGs and Measures. Click the 'Excel' button to download a spreadsheet.
:::

:::{.column-body-outset}
```{r RNAGS}

# Filter for just Phys-chem elements

RFF <- read.csv("/dbfs/FileStore/WSX_HGray/RFF.csv")
RFF <- RFF[RFF$OPERATIONAL_CATCHMENT %in% c("Poole Harbour Rivers","Poole Harbour Rivers TraC"),]


rnag2 <- RFF %>%  filter(OPERATIONAL_CATCHMENT %in% c("Poole Harbour Rivers TraC", "Poole Harbour Rivers") & 
                           CLASS_ITEM_NAME %in% c("Fish", 
                                              "Invertebrates", 
                                              "Macroalgae", 
                                              "Macrophytes",
                                              "Macrophytes and Phytobenthos Combined",
                                              "Phytoplankton")) %>% 
                       arrange(WATERBODY_ID)           # Arrange dataframe so it appears neater in DT

RNAG <- rnag2

RNAG <- RNAG %>% rename(YEAR_RNAG_CREATED= CREATED_DATE,
                        WFD_YEAR = YEAR) %>% 
            distinct()

library(DT)
library(htmlwidgets)

DT::datatable(RNAG[,c(7, 6,18, 32, 16:17,19,20,22:30,23, 10,11,2)],
          class = 'cell-border stripe',
          extensions = c("Buttons","FixedColumns"),
          options = list(
            dom = 'Blfrtip',
            buttons = 'excel',
            initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}"))
    )


```
:::

### Measures to Improve Waterbodies
:::{.column-body-outset}
```{r Measures}
Measures_Class <- readxl::read_xlsx("/dbfs/FileStore/WSX_HGray/ETL_Imports_Require_Manual/Measures_Extraction_Tool_Extended.xlsx", sheet= "Measure Class Items", skip=2)  
Measures_WBs <- readxl::read_xlsx("/dbfs/FileStore/WSX_HGray/ETL_Imports_Require_Manual/Measures_Extraction_Tool_Extended.xlsx", sheet= "Connections to Water Bodies", skip=2)  %>% 
                        filter(AREA_NAME== "Wessex")
Measures_Cat <- readxl::read_xlsx("/dbfs/FileStore/WSX_HGray/ETL_Imports_Require_Manual/Measures_Extraction_Tool_Extended.xlsx", sheet= "Measure Categories", skip=2)  


CAT_Mini <- CAT %>% select(WB_NAME, WB_ID) %>% 
                    st_drop_geometry()


Mes <- Measures_WBs %>% filter(OPERATIONAL_CATCHMENT %in% c("Poole Harbour Rivers TraC", "Poole Harbour Rivers") &  WATERBODY_ID %in% unique(RNAG$WATERBODY_ID))
Mes_Categ <- inner_join(Mes, Measures_Cat, by = "ACTION_UID") %>% 
             inner_join(CAT_Mini, by = c("WATERBODY_ID" = "WB_ID")) %>% 
              filter(!CREATED_DATE== "01/01/1980") %>% 
                arrange(WATERBODY_ID)





   DT::datatable(Mes_Categ[,c(16,3,10,12:14)],
          class = 'cell-border stripe',
          extensions = c("Buttons","FixedColumns"),
          options = list(
            dom = 'Blfrtip',
            buttons = 'excel',
            initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}"))
    )

```
:::

### Ecological Element Classification RNAGs

RNAGs for Ecological Quality Elements are displayed in the map below, they are filtered to show the most recent RNAGs, those which are opaque are \>5 years old and have a creation date of 1st January 2019.

```{r}

# Do we still use this?

CDE_f <- CDE %>% 
  filter(Class.Master.Master == "ECO" & Year == "2022")

  
 # RNAG <- RNAG %>% 
    #           
     #           filter(CREATED_DATE == sort(CREATED_DATE)[length(sort(CREATED_DATE))])# %>%   # We want the most recent creation date for each pressure
   # mutate(
    #           Date = as.Date(ymd_hms(CREATED_DATE))
     #          ) %>% 
             # filter(hydromorph == "not designated artificial or heavily modified") %>%  # I think we should still consider A/HMWBs
            #   group_by(PRESSURE_1) %>%          
    
    #   ungroup()

  
  # Filter RNAGs by CLass_Item so we can toggle them on/off in below plot.
  RNAG_Inv <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Invertebrates")
  
  RNAG_Fish <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Fish")
    
      RNAG_Macros <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Macrophytes and Phytobenthos Combined")
      
         RNAG_DO <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Dissolved oxygen")
         
          
            RNAG_Phos <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Phosphate")


#            leaflet() %>% 
#  addProviderTiles(providers$Esri) %>% 
#    addPolygons(data=CAT_Union,
#                        color="black",
  #                     weight = 2,
  #                     opacity = 0.99,
  #                     fillColor = NA,
  #                     fillOpacity = 0.00001
    #              ) %>% 
  #  addPolygons(data=RNAG_Inv,
#              color = "black",
 #             weight = 0.5,
 #             fillOpacity = ~ifelse(RNAG_Inv$CREATED_DATE < as.Date("2019-01-01"), 0.2, 0.99),
 #             fillColor = "grey",# ~pal(RNAG_Inv$CLASSIFICATION_NAME),
 #             popup= paste0("RNAG Created: ",RNAG_Inv$CREATED_DATE, "<br>",
 #                           "Element: ", RNAG_Inv$CLASS_ITEM_NAME, "<br>",
  #                          "WB: ",RNAG_Inv$WATERBODY_NAME, "<br> Pressure 1: ",
  #                          RNAG_Inv$PRESSURE_1,
  #                          "<br> Pressure 2: ",
  #                         RNAG_Inv$PRESSURE_NAME_2,
  #                          "<br> Activity: " ,
  #                          RNAG_Inv$ACTIVITY),
  #           group = "Invertebrates RNAGs")%>% 
  #              addLegend(opacity = 0.9, 
  #                       pal = pal,
   #                      values = RNAG_Inv$CLASSIFICATION_NAME,
   #                      title = "RNAG by Ecological Quality Element") 
            
     

```

### WFD Invertebrates Classification

Invertebrates have been used to assess the ecological health of rivers because they acts as biotic indicators for water quality and habitat diversity, whilst unlike fish or macrophytes, their abundance is less impacted by barriers, making them a useful organism to focus on. Species diversity and abundance combined are used to quantify an ecological communities' response to pressures such as water quality, low flows and sediment. They also provide a continuous sample of the above pressures in comparison to spot samples.

```{r }
#| label: Inverts WFD 2022

CDE_e <- CDE %>% 
          filter(Classification.Item == "Invertebrates" & 
                   Year == "2022")


CDE_e_19<- CDE %>% 
          filter(Classification.Item == "Invertebrates" & 
                   Year == "2019")



 leaflet() %>% 
  addProviderTiles(providers$Esri,
                  group = "Esri Basemap") %>% 
  addPolygons(data= CDE_e,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2022 Status") %>% 
  addPolygons(data= CDE_e_19,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2019 Status") %>% 
   addLegend(opacity = 0.9, 
            pal = pal,
            values = CDE_e$Status,
            title = "Invertebrates WFD Status") %>%        
  addLayersControl(baseGroups = c( "2022 Status",
              "2019 Status"),
                   overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019 Status",
              "Esri Basemap")) 


```

### Invertebrates (Biosys)

The below timeseries show WHPT_Total and WHPT_ASPT for all sites within `r unique(CAT$OPCAT_NAME)` catchment. WHPT Total is the sum of individual taxa scores. It reflects the overall biological quality of the waterbody based on the presence and abundance of various taxa.

WHPT_ASPT is the average score per taxon and is calculated by dividing the WHPT Total by the number of scoring taxa (NTAXA). It gives an indication of the average sensitivity of the taxa present, with higher ASPT values generally indicating better water quality.

```{r Leaflet Inverts & WFD Polygons Map}
#| layout-ncol: 2
#| column: page


# Nice to have: It would be better to add a radius change as well as a fill colour to the below leaflet maps. Looks better.

inv <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Inv_WSX.csv")

inv %<>% 
    mutate(
    Date = lubridate::ymd(Date),
    Sampled_Date_Amended = lubridate::ymd(REPLICATE_CODE)
  ) %>% 
  filter(OPCAT_NAME == unique(CAT$OPCAT_NAME) & Date >= "2000-01-01")

ggplot(inv, aes(Date, WHPT_TOTAL))+geom_point()+geom_smooth()+
   labs(title = paste0("WHPT_TOTAL across ", unique(CAT$OPCAT_NAME), " Catchment"))

ggplot(inv, aes(Date, WHPT_ASPT))+geom_point()+geom_smooth()+
  labs(title = paste0("WHPT_ASPT across ", unique(CAT$OPCAT_NAME), " Catchment"))

Rivers_250k <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Hydrology/Rivers_250k.shp")

Rivs250 <- Rivers_250k %>% 
              st_transform(st_crs(4326)) %>% 
              st_intersection(CAT_Union)

# Don't use BMPW_Mean it's over the whole time span not custom

inv_2019 <- inv %>% 
              mutate(
                Sample_Date_Maybe = dmy(ANALYSIS_ID)
              ) %>% 
              filter(Year >= "2019") %>% 
               group_by(SITE_ID) %>% 
                mutate(
                  Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
                  WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
                )

```

The below plot shows Biosys data with WHPT Total plotted on top of interim 2022 WFD invertebrate classifications.

```{r}

pal_inv <- colorBin(palette = "RdYlBu", domain=inv_2019$WHPT_TOTAL_Mean)

inv_2010 <- inv %>% 
              filter(Year >= 2010 & Year <= 2018) %>% 
              group_by(SITE_ID) %>% 
                mutate(
                  Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
                  WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
                )

pal_inv_2010 <- colorBin(palette = "RdYlBu", domain=inv_2010$WHPT_TOTAL_Mean)

# Leaflet plot of riverfly 
#
leaflet() %>% 
  addProviderTiles(providers$Esri,
                   group = "Esri Basemap") %>% 
    addPolygons(data=CAT, 
              label = CAT$WB_NAME, 
              fill=NA,
              color = "black",
              weight = 2) %>% 
 addPolygons(data=CDE_e,
               color = "black",
              weight = 0.5,
              fillOpacity = 0.22,
              fillColor = ~pal(CDE_e$Status),
              popup= CDE_e$Water.Body,
              group= "2022 WFD Invertebrate Status")  %>% 
       # Here's where I added the RHS dat
addPolylines(data = Rivs250, 
               color = "steelblue",
               opacity = 1,
               weight = 1.4) %>% 
  addCircleMarkers(data = inv_2019,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
                   group = "2019-2024 <br> Biosys Invertebrate Sites"
                   )%>% 
  addCircleMarkers(data = inv_2010,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
                   group = "2010-2018 <br> Biosys Invertebrate Sites") %>% 
  addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
                   overlayGroups = c(
              "2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "2022 WFD Invertebrate Status"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "Esri Basemap")) %>% 
  addLegend(title= paste0("Mean WHPT Site <br> Scores 2019- Current"),
            pal = pal_inv, values = inv_2019$WHPT_TOTAL_Mean)

```

::: {.callout-tip collapse="true" icon="false"}
### Fish

Add a map and include some text which shows what the catchment is significant for. For example, it should be conveyed from data that the Parrett is significant for eels, the avon, for salmon.
:::

::: {.callout-tip collapse="true" icon="false"}
### Macrophytes

Add a map and boxplot akin to WQ page.
:::

### Third Party Data

This initial evidence pack doesn't include any ecological Water Company data, only data taken directly from the Riverfly Partnership. Third-parties often have a different or un-aligned monitoring agenda to the Environment Agency. Eventually through influence, priorities can be aligned however, initially data may not be exactly where the EA would require it. Here we view data from 2019 onwards.

```{r}
#| label: Riverfly data from RP
#fig-column: page-right


# Note the api is already filtered to everything after 2019
ARMI <- read.csv("/dbfs/FileStore/WSX_HGray/ETL_Imports_Require_Manual/Riverfly__5_.csv")

  OO <- ARMI %>% filter(!Location..Longitude== "NA",
                        Recorded..Date == as.Date(Recorded..Date),
                        Recorded..Date >= as.Date("01/01/2019")) 
  
  ARMI_sf <- st_as_sf(OO, coords= c("Location..Longitude", "Location..Latitude"), crs=4326)

  ARMI <- ARMI_sf[CAT,] 
  
ARMI %<>%
  mutate(
     DateTime = dmy_hm(paste0(ARMI$Recorded..Date, ARMI$Recorded..Time))
  ) %>% 
  group_by(Site) %>%
  mutate(
      Survey_Count = n(),
      Mean_Tot = round(mean(ARMI.Total, na.rm = TRUE),2)
  ) %>% 
    ungroup()

pal_cs_inv <- colorBin(palette = "RdYlBu", domain=ARMI$Mean_Tot)

## Leaflet Map
leaflet() %>% 
  addProviderTiles(providers$Esri,
                   group = "Esri Basemap") %>% 
    addPolygons(data=CAT, 
              label = CAT$WB_NAME, 
              fill=NA,
              color = "black",
              weight = 2) %>% 
 addPolygons(data=CDE_e,
               color = "black",
              weight = 0.5,
              fillOpacity = 0.22,
              fillColor = ~pal(CDE_e$Status),
              popup= CDE_e$Water.Body,
              group= "WFD Invertebrate Status")  %>% 
       # Here's where I added the RHS dat
addPolylines(data = Rivs250, 
               color = "steelblue",
               opacity = 1,
               weight = 1.4) %>% 
  addCircleMarkers(data = inv_2019,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        
                                  "<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
                   group = "2019-2024 <br> Biosys Invertebrate Sites"
                   )%>% 
  addCircleMarkers(data = ARMI,
                   radius = 5,
                   fillColor = ~pal_cs_inv(ARMI$Mean_Tot),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("Mean Total Score: ", ARMI$Mean_Tot,  
                                  "<br> Sample Count: ", ARMI$Survey_Count),
                   group = "2019-2024 <br> Riverfly Partnership Sites") %>% 
  addCircleMarkers(data = inv_2010,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                   
                                  "<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
                   group = "2010-2018 <br> Biosys Invertebrate Sites") %>% 
  addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
                   overlayGroups = c(
              "2019-2024 <br> Riverfly Partnership Sites",
              "2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "WFD Invertebrate Status"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "WFD Invertebrate Status",
              "Esri Basemap")) %>% 
  addLegend(title= paste0("Mean Total CS Site <br> Scores 2019- Current"),
            pal = pal_inv_2010, values = ARMI$Mean_Tot)



```
