---
title: "Ecology"
format:
  html:
    theme: flatly
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: false
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, echo=FALSE, cache=TRUE)
```

Ecology is the centerpiece of our action on rivers, the Water Framework Directive is centered on acheiving "Good Ecological Status" with all measures targetting improvements in ecology.

For catchment management and river restoration to be effective, measures must benefit ecology. Without a clear line-of-sight between how a measure will have a positive ecological impact, the success of the impact and the investment into this is of limited value.

### WFD Ecological Overall Status

Ecological status classifications can be composed of up to four different assessments:

-   An assessment of status indicated by a biological quality element such as fish, invertebrates or algae. We also assess for the presence of invasive species as a separate test.

-   An assessment of compliance with environmental standards for supporting physico-chemical conditions, such as dissolved oxygen, phosphorus or ammonia.

-   An assessment of compliance with environmental standards for concentrations of specific pollutants, such as zinc, cypermethrin or arsenic (these are known as 'Annex VIII' substances).

The lowest score in a waterbody for the above items is adopted as the "Ecological Overall" classification for that waterbody.

------------------------------------------------------------------------

```{r }
#| label: the general cps & cat

library(sf)
library(magrittr)
library(tidyverse)
library(leaflet)


source("Catch_Set_Up.R")

  DRN <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/DRN/DRN_Merged_MCAT.shp")

  DRN <- DRN[CAT,]

 


```

```{r CDE text}


# Load your data
CDE <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/WFD_Wessex_2024.csv")

CDE %<>% 
  filter(Operational.Catchment == unique(CAT$OPCAT_NAME)) %>% 
  inner_join(CAT_geo, ., by = c("WB_ID" = "Water.Body.ID"))

# 2022 map
CDE_e_2022 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2022")

# 2019 map
CDE_e_2019 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2019" & Cycle == "3")


```

In The 2022 interim WFD classification for the `r unique(CAT$OPCAT_NAME)` saw `r round(((table(CDE_e_2022$Status)[[1]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieve *`r row.names(table(CDE_e_2022$Status))[1]`*, whilst `r round(((table(CDE_e_2022$Status)[[2]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieved *`r row.names(table(CDE_e_2022$Status))[2]`*, and `r round(((table(CDE_e_2022$Status)[[3]][1]/length(unique(CDE_e_2022$Water.Body)))*100),0)`% of waterbodies achieve *`r row.names(table(CDE_e_2022$Status))[3]`*.

In comparison, the 2019 WFD classification saw `r  round(((table(CDE_e_2019$Status)[[1]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r row.names(table(CDE_e_2019$Status))[1]`*, with `r round(((table(CDE_e_2019$Status)[[2]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r   row.names(table(CDE_e_2019$Status))[2]`*, and `r round(((table(CDE_e_2019$Status)[[3]][1]/length(unique(CDE_e_2019$Water.Body)))*100),0)`% at *`r row.names(table(CDE_e_2019$Status))[3]`*.

```{r}
#| label: Ecological Overall CDE Map



library(leaflet)
library(dplyr)
library(magrittr)


# Define palette
pal <- colorFactor(
  palette = c("green", "seagreen", "seagreen", "yellow", "orange", "#b71105", "red"),
  levels = c("High", "Good", "Supports Good", "Moderate", "Bad", "Poor", "Fail"),
  na.color = "transparent"
)

CDE_e_2015 <- CDE %>% 
  filter(Classification.Item == "Ecological Overall" & 
         Year == "2015")#& Cycle == "3")


 leaflet() %>% 
  addProviderTiles(providers$Esri,
                  group = "Esri Basemap") %>% 
  addPolygons(data= CDE_e_2022,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2022 Status") %>% 
  addPolygons(data= CDE_e_2019,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2019 Status") %>% 
  addPolygons(data= CDE_e_2015,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2015 Status") %>% 
   addLegend(opacity = 0.9, 
            pal = pal,
            values = CDE_e_2022$Status,
            title = paste0(unique(CDE_e_2022$Classification.Item),
                           "<br> WFD Status")) %>%        
  addLayersControl(baseGroups = c( "2022 Status",
              "2019 Status",
              "2015 Status"),
                   overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019 Status",
              "2015 Status",
              "Esri Basemap")) 






```

### Reasons for Not Acheiving Good

The `r unique(CAT$OPCAT_NAME)` has RNAGS for

```{r RNAGS}

# These are just for ecological quality elements

RNAG <- CPS_sf %>% 
                mutate(
                Date = as.Date(ymd_hms(CREATED_DATE))
                ) %>% 
               # filter(hydromorph == "not designated artificial or heavily modified") %>%  # I think we should still consider A/HMWBs
                group_by(PRESSURE_NAME_1) %>% 
                filter(Date == sort(Date)[length(sort(Date))]) %>%   # We want the most recent creation date for each pressure
                ungroup()



library(DT)
library(htmlwidgets)

DT::datatable(RNAG[,c(1, 11:32)],
          class = 'cell-border stripe',
          caption = 'Use the map below to find a waterbody and use the table search function to find its records',
          options = list(dom = 'Blfrtip', buttons = 'copy')
              )
            

```

### Reasons for Not Acheiving Good Ecological Status: Ecological Quality Elements

*Or should it just be reasons for not acheiving good?*

RNAGs for Ecological Quality Elements are displayed in the map below, they are filtered to show the most recent RNAGs, those which are opaque are \>5 years old and have a creation date of 1st January 2019. This surpasses the national KPI as it is four months ahead of the KPI target of 1st April 2019.

```{r}

# Do we still use this?

CDE_f <- CDE %>% 
  filter(Class.Master.Master == "ECO" & Year == "2022")

# Filter RNAGs by CLass_Item so we can toggle them on/off in below plot.
  RNAG_Inv <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Invertebrates")
  
    RNAG_Fish <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Fish")
    
      RNAG_Macros <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Macrophytes and Phytobenthos Combined")
      
         RNAG_DO <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Dissolved oxygen")
         
          
            RNAG_Phos <- RNAG %>% 
                  filter(CLASS_ITEM_NAME == "Phosphate")


            leaflet() %>% 
  addProviderTiles(providers$Esri) %>% 
    addPolygons(data=CAT_Union,
                        color="black",
                       weight = 2,
                       opacity = 0.99,
                       fillColor = NA,
                       fillOpacity = 0.00001
                  ) %>% 
    addPolygons(data=RNAG,
              color = "black",
              weight = 0.5,
              fillOpacity = ~ifelse(RNAG$Date < as.Date("2019-01-01"), 0.2, 0.99),
              fillColor = ~pal(RNAG$CLASSIFICATION_NAME),
              popup= paste0("RNAG Created: ",RNAG$Date, "<br>",
                            "Element: ", RNAG$CLASS_ITEM_NAME, "<br>",
                            "WB: ",RNAG$WB_NAME, "<br> Pressure 1: ",
                            RNAG$PRESSURE_NAME_1,
                            "<br> Pressure 2: ",
                            RNAG$PRESSURE_NAME_2,
                            "<br> RFF Action Name: " ,
                            RNAG$RFF_ACTION_NAME),
              group = "Invertebrates RNAGs")%>% 
                addLegend(opacity = 0.9, 
                         pal = pal,
                         values = RNAG$CLASSIFICATION_NAME,
                         title = "RNAG by Ecological Quality Element") 
            
            
# Leaflet RNAG Map for 
#leaflet() %>% 
 # addProviderTiles(providers$Esri) %>% 
  #  addPolygons(data=CAT_Union,
   #                     color="black",
    #                   weight = 2,
     #                  opacity = 0.99,
      #                 fillColor = NA,
       #                fillOpacity = 0.00001
        #          ) %>% 
#    addPolygons(data=RNAG_Inv,
 #             color = "black",
  #            weight = 0.5,
   #           fillOpacity = ~ifelse(RNAG_Inv$Date < as.Date("2019-01-01"), 0.2, 0.99),
    #          fillColor = ~pal(RNAG_Inv$CLASSIFICATION_NAME),
     #         popup= paste0("RNAG Created: ",RNAG_Inv$Date, "<br>",
      #                      "WB: ",RNAG_Inv$WB_NAME, "<br> Pressure 1: ",
       #                     RNAG_Inv$PRESSURE_NAME_1,
        #                    "<br> Pressure 2: ",
         #                   RNAG_Inv$PRESSURE_NAME_2,
          #                  "<br> RFF Action Name: " ,
           #                 RNAG_Inv$RFF_ACTION_NAME),
#              group = "Invertebrates RNAGs") %>% 
 #     addPolygons(data=RNAG_Fish,
  #            color = "black",
   #           weight = 0.5,
    #          fillOpacity = ~ifelse(RNAG_Fish$Date < as.Date("2019-01-01"), 0.2, 0.99),
     #         fillColor = ~pal(RNAG_Fish$CLASSIFICATION_NAME),
      #        popup= paste0("RNAG Created: ",RNAG_Fish$Date, "<br>",
       #                     "WB: ",RNAG_Fish$WB_NAME, "<br> Pressure 1: ",
        ##                    RNAG_Fish$PRESSURE_NAME_1,
          #                  "<br> Pressure 2: ",
          #                  RNAG_Fish$PRESSURE_NAME_2,
           #                 "<br> RFF Action Name: " ,
            #                RNAG_Fish$RFF_ACTION_NAME),
             # group = "Fish RNAGs") %>% 
#      addPolygons(data=RNAG_Macros,
 #             color = "black",
  #            weight = 0.5,
    #          fillOpacity = ~ifelse(RNAG_Macros$Date < as.Date("2019-01-01"), 0.2, 0.99),
   ##           fillColor = ~pal(RNAG_Macros$CLASSIFICATION_NAME),
     #         popup= paste0("RNAG Created: ",RNAG_Macros$Date, "<br>",
     #                       "WB: ",RNAG_Macros$WB_NAME, "<br> Pressure 1: ",
      #                      RNAG_Macros$PRESSURE_NAME_1,
      #                      "<br> Pressure 2: ",
       #                     RNAG_Macros$PRESSURE_NAME_2,
        #                    "<br> RFF Action Name: " ,
          #                  RNAG_Macros$RFF_ACTION_NAME),
         #     group = "Macroph & Phytoben Comb RNAGs") %>% 
#     addPolygons(data=RNAG_DO,
 #             color = "black",
  #            weight = 0.5,
   #           fillOpacity = ~ifelse(RNAG_DO$Date < as.Date("2019-01-01"), 0.2, 0.99),
    #          fillColor = ~pal(RNAG_DO$CLASSIFICATION_NAME),
      #        popup= paste0("RNAG Created: ",RNAG_DO$Date, "<br>",
     #                       "WB: ",RNAG_DO$WB_NAME, "<br> Pressure 1: ",
       #                     RNAG_DO$PRESSURE_NAME_1,
        #                    "<br> Pressure 2: ",
         #                   RNAG_DO$PRESSURE_NAME_2,
          #                  "<br> RFF Action Name: " ,
           #                 RNAG_DO$RFF_ACTION_NAME),
            #  group = "Dissolved Oxygen RNAGs") %>% 
#    addPolygons(data=RNAG_Phos,
 #             color = "black",
  #            weight = 0.5,
   #           fillOpacity = ~ifelse(RNAG_Phos$Date < as.Date("2019-01-01"), 0.2, 0.99),
    #          fillColor = ~pal(RNAG_Phos$CLASSIFICATION_NAME),
     #         popup= paste0("RNAG Created: ",RNAG_Phos$Date, "<br>",
      #                      "WB: ",RNAG_Phos$WB_NAME, "<br> Pressure 1: ",
       #                     RNAG_Phos$PRESSURE_NAME_1,
        #                    "<br> Pressure 2: ",
         #                   RNAG_Phos$PRESSURE_NAME_2,
          #                  "<br> RFF Action Name: " ,
           #                 RNAG_Phos$RFF_ACTION_NAME),
            #  group = "Phosphate RNAGs") %>% 
             #   addLegend(opacity = 0.9, 
              #           pal = pal,
               #          values = CDE_f$CLASSIFICATION_NAME,
                #         title = "RNAG by Ecological Quality Element") %>% 
#              addLayersControl(baseGroups = c("Invertebrates RNAGs",
 #                                            "Fish RNAGs",
   #                                          "Macroph & Phytoben Comb RNAGs",
  # #                                          "Dissolved Oxygen RNAGs",
     #                                        "Phosphate RNAGs"),
      #                     position = "topright",
       #                    options= layersControlOptions(collapsed=FALSE)) 

```

# WFD Invertebrates Classification

Invertebrates have been used following Ecological Overall Status because they act as a proxy for water quality and physical habitat, whilst unlike fish or macrophytes, their abundance is less impacted by barriers. Their health provides information on the base of the food web within river ecosystems. They act as "the river canary".

*need a better justification or maybe have all included- get input from A&R/FBG*

```{r }
#| label: Inverts WFD 2022

CDE_e <- CDE %>% 
          filter(Classification.Item == "Invertebrates" & 
                   Year == "2022")


CDE_e_19<- CDE %>% 
          filter(Classification.Item == "Invertebrates" & 
                   Year == "2019")



 leaflet() %>% 
  addProviderTiles(providers$Esri,
                  group = "Esri Basemap") %>% 
  addPolygons(data= CDE_e,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2022 Status") %>% 
  addPolygons(data= CDE_e_19,
              color = "black",
              weight = 0.5,
              fillOpacity = 1,
              fillColor = ~pal(Status),
              popup= ~Water.Body,
              group = "2019 Status") %>% 
   addLegend(opacity = 0.9, 
            pal = pal,
            values = CDE_e$Status,
            title = "Invertebrates WFD Status") %>%        
  addLayersControl(baseGroups = c( "2022 Status",
              "2019 Status"),
                   overlayGroups = c(
             "Esri Basemap"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019 Status",
              "Esri Basemap")) 


```

### Invertebrates (Biosys)

The below timeseries show WHPT_Total and WHPT_ASPT for all sites within `r unique(CAT$OPCAT_NAME)` catchment. WHPT Total is the sum of individual taxa scores. It reflects the overall biological quality of the waterbody based on the presence and abundance of various taxa.

WHPT_ASP is the average score per taxon and is calculated by dividing the WHPT Total by the number of scoring taxa (NTAXA). It gives an indication of the average sensitivity of the taxa present, with higher ASPT values generally indicating better water quality.

*get feedback from FBG on which metric is better to convey narrative or if both okay - could also omit completely*

```{r Leaflet Inverts & WFD Polygons Map}
#| layout-ncol: 2
#| column: page


# Nice to have: It would be better to add a radius change as well as a fill colour to the below leaflet maps. Looks better.

inv <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Inv_WSX.csv")

inv %<>% 
  filter(OPCAT_NAME == unique(CAT$OPCAT_NAME)) %>% 
  mutate(
    Date = lubridate::ymd(Date),
    Sampled_Date_Amended = lubridate::ymd(REPLICATE_CODE)
  ) 
ggplot(inv, aes(Date, WHPT_TOTAL))+geom_point()+geom_smooth()+
   labs(title = paste0("WHPT_TOTAL across ", unique(CAT$OPCAT_NAME), " Catchment"))

ggplot(inv, aes(Date, WHPT_ASPT))+geom_point()+geom_smooth()+
  labs(title = paste0("WHPT_ASPT across ", unique(CAT$OPCAT_NAME), " Catchment"))

Rivers_250k <- read_sf("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/Hydrology/Rivers_250k.shp")

Rivs250 <- Rivers_250k %>% 
              st_transform(st_crs(4326)) %>% 
              st_intersection(CAT_Union)

# Don't use BMPW_Mean it's over the whole timespan not custom

inv_2019 <- inv %>% 
              mutate(
                Sample_Date_Maybe = dmy(ANALYSIS_ID)
              ) %>% 
              filter(Year >= "2019") %>% 
               group_by(SITE_ID) %>% 
                mutate(
                  Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
                  WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
                )


#ggplot()+ geom_sf(data=CAT_Union, fill=NA)+
 #     geom_sf(data=Rivs250, col="skyblue")+
  #    geom_point(data=inv_2019, aes( x= lon, y= lat, col=BMWP_Mean, size=BMWP_Mean))+
   #   ggtitle(paste0("EA Invert Sampling Sites ", min(inv_2019$Year)," mean BMWP tot Scores to ", #max(inv_2019$Year)),
 ##             subtitle = paste0(unique(CAT$OPCAT_NAME)))+
   #           theme_void()+
    #  theme(plot.title = element_text(hjust = 0.5),
     #       plot.subtitle = element_text(hjust = 0.0))


```

The below plot shows Biosys data with WHPT Total plotted on top of interim 2022 WFD invertebrate classifications.

```{r}

pal_inv <- colorBin(palette = "RdYlBu", domain=inv_2019$WHPT_TOTAL_Mean)

inv_2010 <- inv %>% 
              filter(Year >= 2010 & Year <= 2018) %>% 
              group_by(SITE_ID) %>% 
                mutate(
                  Sample_Count_Mean = length(unique(Sampled_Date_Amended)),
                  WHPT_TOTAL_Mean = mean(WHPT_TOTAL)
                )

pal_inv_2010 <- colorBin(palette = "RdYlBu", domain=inv_2010$WHPT_TOTAL_Mean)

# Leaflet plot of riverfly 
#
leaflet() %>% 
  addProviderTiles(providers$Esri,
                   group = "Esri Basemap") %>% 
    addPolygons(data=CAT, 
              label = CAT$WB_NAME, 
              fill=NA,
              color = "black",
              weight = 2) %>% 
 addPolygons(data=CDE_e,
               color = "black",
              weight = 0.5,
              fillOpacity = 0.22,
              fillColor = ~pal(CDE_e$Status),
              popup= CDE_e$Water.Body,
              group= "2022 WFD Invertebrate Status")  %>% 
       # Here's where I added the RHS dat
addPolylines(data = Rivs250, 
               color = "steelblue",
               opacity = 1,
               weight = 1.4) %>% 
  addCircleMarkers(data = inv_2019,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
                   group = "2019-2024 <br> Biosys Invertebrate Sites"
                   )%>% 
  addCircleMarkers(data = inv_2010,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
                   group = "2010-2018 <br> Biosys Invertebrate Sites") %>% 
  addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
                   overlayGroups = c(
              "2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "2022 WFD Invertebrate Status"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "Esri Basemap")) %>% 
  addLegend(title= paste0("Mean WHPT Site <br> Scores 2019- Current"),
            pal = pal_inv, values = inv_2019$WHPT_TOTAL_Mean)

```

```{r}

#ggplot()+ geom_sf(data=CAT_Union, fill=NA)+
 #     geom_sf(data=Rivs250, col="skyblue")+
  #    geom_point(data=inv_2010, aes( x= lon, y= lat, col=BMWP_Mean, size=BMWP_Mean))+
   #   ggtitle(paste0("EA Invert Sampling Sites ", min(inv_2010$Year)," mean BMWP tot Scores to ", max(inv_2010$Year)),
  #            subtitle = paste0(unique(CAT$OPCAT_NAME)))+
   #           theme_void()+
    #  theme(plot.title = element_text(hjust = 0.5),
     #       plot.subtitle = element_text(hjust = 0.0))
```

## Third Party Data

This initial proof of concept doesn't include any Water Company data, only data taken directly from the Riverfly Partnership. Third-parties often have a different or un-aligned monitoring agenda to the Environment Agency. Eventually through influence, priorities can be aligned however, initially data may not be exactly where the EA would require it.

```{r}
#| label: Riverfly data from RP
#fig-column: page-right

library(lubridate)
library(jsonlite)
library(httr)

# Collect your token from the universal unique identifier
uuid_res <- GET("https://api.cartographer.io/map/embed/v1/authorize")
token <- content(uuid_res)$token

# Our url endpoint  
url <- "https://api.cartographer.io/map/feature/v2/riverfly"

#The way the api gives us the dates is as a timestamp from our first date, here the origin, we use it later.   
orig="2019-01-01T12:00:00.000Z"

bbox <- CAT_Union %>% 
  st_bbox()

Today_DateTime <- gsub(" ","T", Sys.time())
Today_DateTime <- paste0(Today_DateTime, ".000Z")
Today_DateTime = "2024-08-26T01:00:00.000Z"  # Temp measure to fix bug, remove later.

# Set the parameters
params <- list(
  workspace = "riverflies",
  project = "riverfly",
  sw= paste0(as.numeric(bbox[2]),",", as.numeric(bbox[1])),
  ne= paste0(as.numeric(bbox[4]),",",as.numeric(bbox[3])),
  from = orig,
  to = Today_DateTime
)

# Make a GET request to the feature endpoint
response <- GET(url, add_headers("Authorization" = paste("Bearer", token)), query = params)

# Crunch api from JSON
api_char <-  rawToChar(response$content)
apio <- fromJSON(api_char, flatten=T)


#The timestamp our data is given to us in is in milliseconds from the 'from' time we requested so we need to convert.
apio$features$properties.timestamp <- as.POSIXct(apio$features$properties.timestamp/1000, origin = orig) #we've already specified the timezone in the origin so don't need to add , tz= "

api <- apio$features

colnames(api) <-  gsub("properties.","",names(api))

#Lets extract the geometry to points so addCircleMarkers can read it.
api %<>% 
  mutate(
    long=unlist(map(api$geometry.coordinates,1)),
    lat=unlist(map(api$geometry.coordinates,2)),
    DateTime=gsub("2073","2024", timestamp),
    DateTime=gsub("2072","2023", DateTime),
    DateTime=gsub("2071","2022", DateTime),
    DateTime=gsub("2070","2021",DateTime),
    DateTime=gsub("2069","2020",DateTime),
    DateTime=gsub("2068","2019",DateTime),
    DateTime=ymd_hms(DateTime)
  ) %>% 
  group_by(site) %>% 
  mutate(
    Survey_Count=length(site),
    Mean_Tot = mean(total)
  )


# Note the api is already filtered to everything after 2019

pal_cs_inv <- colorBin(palette = "RdYlBu", domain=api$Mean_Tot)


## Leaflet Map
leaflet() %>% 
  addProviderTiles(providers$Esri,
                   group = "Esri Basemap") %>% 
    addPolygons(data=CAT, 
              label = CAT$WB_NAME, 
              fill=NA,
              color = "black",
              weight = 2) %>% 
 addPolygons(data=CDE_e,
               color = "black",
              weight = 0.5,
              fillOpacity = 0.22,
              fillColor = ~pal(CDE_e$Status),
              popup= CDE_e$Water.Body,
              group= "WFD Invertebrate Status")  %>% 
       # Here's where I added the RHS dat
addPolylines(data = Rivs250, 
               color = "steelblue",
               opacity = 1,
               weight = 1.4) %>% 
  addCircleMarkers(data = inv_2019,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv(inv_2019$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT Mean Score: ",inv_2019$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Range: ", range(inv_2019$Sample_Date_Maybe)),
                   group = "2019-2024 <br> Biosys Invertebrate Sites"
                   )%>% 
  addCircleMarkers(data = api,
                   lng = ~long, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_cs_inv(api$Mean_Tot),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("Mean Total Score: ", api$Mean_Tot,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Date: ", range(api$DateTime)),
                   group = "2019-2024 <br> Riverfly Partnership Sites") %>% 
  addCircleMarkers(data = inv_2010,
                   lng = ~lon, 
                   lat = ~lat, 
                   radius = 5,
                   fillColor = ~pal_inv_2010(inv_2010$WHPT_TOTAL_Mean),
                   color = "black",
                   weight = 0.3,
                   fillOpacity = 1,
                   popup = paste0("WHPT_TOTAL_Mean Score: ",inv_2010$WHPT_TOTAL_Mean,                        #Bit random dates? Check mean is calculated correctly. Also isn't it WHPT we should show not BMWP? I think the columns may be messed up as ANALAYSIS_ID is our date.
                                  "<br> Sample Date: ", inv_2010$Sampled_Date_Amended),
                   group = "2010-2018 <br> Biosys Invertebrate Sites") %>% 
  addLayersControl(baseGroups = c("Esri Basemap","Blank Basemap"),
                   overlayGroups = c(
              "2019-2024 <br> Riverfly Partnership Sites",
              "2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "WFD Invertebrate Status"),
                   position = "topright",
                   options= layersControlOptions(collapsed=FALSE)) %>% 
  hideGroup(c("2019-2024 <br> Biosys Invertebrate Sites",
              "2010-2018 <br> Biosys Invertebrate Sites",
              "WFD Invertebrate Status",
              "Esri Basemap")) %>% 
  addLegend(title= paste0("Mean Total CS Site <br> Scores 2019- Current"),
            pal = pal_inv_2010, values = api$Mean_Tot)



```
